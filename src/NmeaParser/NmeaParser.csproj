<Project Sdk="MSBuild.Sdk.Extras/3.0.44">
    <Sdk Name="Microsoft.DotNet.PackageValidation" Version="1.0.0-preview.7.21379.12" />
    
  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;net452;uap10.0.19041;net6.0;net8.0-ios;net8.0-android;net6.0-windows10.0.19041.0</TargetFrameworks>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <Configurations>Debug;Release</Configurations>
    <Platforms>AnyCPU</Platforms>
    <Authors>Morten Nielsen</Authors>
    <Company>Morten Nielsen</Company>
    <Description>An NMEA stream parser for serial port, bluetooth and file-based nmea simulation.</Description>
    <PackageTags>NMEA GPS GNSS Serialport Bluetooth Navigation NTRIP RTCM Galileo GLONASS BeiDou Garmin Trimble</PackageTags>
    <PackageId>SharpGIS.NmeaParser</PackageId>
    <Version Condition="'$(Version)'==''">3.0.0</Version> <!-- Note: Also update PackageValidationBaselineVersion -->
    <Product>NMEA Parser</Product>
    <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
    <PackageProjectUrl>https://dotmorten.github.io/NmeaParser/</PackageProjectUrl>
    <RepositoryUrl>https://github.com/dotMorten/NmeaParser</RepositoryUrl>
    <NeutralLanguage>en-US</NeutralLanguage>
    <Copyright>Copyright © Morten Nielsen 2015-$([System.DateTime]::Now.ToString('yyyy'))</Copyright>
    <OutputPath>$(MSBuildThisFileDirectory)..\..\artifacts\NmeaParser\$(Configuration)</OutputPath>
    <PackageOutputPath>..\..\artifacts\NuGet\$(Configuration)\</PackageOutputPath>
    <PackageReleaseNotes></PackageReleaseNotes>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
    <LangVersion>9.0</LangVersion>
    <TreatWarningsAsErrors Condition="'$(Configuration)'=='Release'">true</TreatWarningsAsErrors>
    <NoWarn>$(NoWarn);NU1505</NoWarn>
    <CodeAnalysisTreatWarningsAsErrors Condition="'$(Configuration)'=='Release'">true</CodeAnalysisTreatWarningsAsErrors>
    <Nullable>enable</Nullable>
    <PackageIcon>logo.png</PackageIcon>
    <PackageIconUrl />
    <CheckEolWorkloads>false</CheckEolWorkloads>
    <CheckEolTargetFramework>false</CheckEolTargetFramework>
    <_SdkIgnoreMSBuildCoreWarning>true</_SdkIgnoreMSBuildCoreWarning>
  </PropertyGroup>
    
  <PropertyGroup Label="PackageValidationSettings">
      <EnablePackageValidation>true</EnablePackageValidation>
      <PackageValidationBaselineVersion>2.2.0</PackageValidationBaselineVersion>
      <!-- When updating this, make sure to delete PackageValidationSuppression.txt files -->
      <GenerateCompatibilitySuppressionFile>false</GenerateCompatibilitySuppressionFile>
      <!-- Set to true to generate suppresion files used to ignore _intended_ breaking changes. Should never be checked in true -->
      <CompatibilitySuppressionFilePath Condition="('$(GenerateCompatibilitySuppressionFile)'=='true') OR Exists('$(MSBuildProjectDirectory)\PackageValidationSuppression.txt')">PackageValidationSuppression.txt</CompatibilitySuppressionFilePath>
  </PropertyGroup>

  <PropertyGroup>
    <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">11.0</SupportedOSPlatformVersion>
    <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">13.1</SupportedOSPlatformVersion>
    <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">21.0</SupportedOSPlatformVersion>
    <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>
    <TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</TargetPlatformMinVersion>
  </PropertyGroup>
  
  <PropertyGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
    <DefineConstants>$(DefineConstants);NETSTANDARD</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetFramework)' == 'net6.0'">
    <DefineConstants>$(DefineConstants);NETSTANDARD</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">
    <DefineConstants>$(DefineConstants);WINDOWS</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'net452'">
    <DefineConstants>$(DefineConstants);NETFX</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'net8.0-android'">
    <DefineConstants>$(DefineConstants);API_LEVEL_24</DefineConstants>
  </PropertyGroup>
  
  <PropertyGroup Condition="'$(TargetFramework)' == 'uap10.0.19041'">
    <TargetPlatformMinVersion>10.0.16299.0</TargetPlatformMinVersion>
  </PropertyGroup>
  
  <ItemGroup Condition="'$(TargetFramework)' == 'uap10.0.19041'">
    <EmbeddedResource Include="**\*.rd.xml" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0" PrivateAssets="All" />
  </ItemGroup>
  
  <ItemGroup>
    <None Include="logo.png" Pack="true" PackagePath="" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'netcoreapp2.1' OR '$(TargetFramework)'=='net6.0-windows10.0.19041.0'">
    <PackageReference Include="System.IO.Ports" Version="4.7.0" />
  </ItemGroup>

  <Target Name="SignAssemblies" Condition="Exists($(CertificatePath)) AND '$(CertificatePassword)'!=''" BeforeTargets="CopyFilesToOutputDirectory" DependsOnTargets="ComputeIntermediateSatelliteAssemblies"> 
    <PropertyGroup>
      <SignToolPath>$(ProgramFiles)\Windows Kits\10\bin\x64\signtool.exe</SignToolPath>
      <SignToolPath Condition="!Exists($(SignToolPath))">$(ProgramFiles)\Windows Kits\10\bin\x86\signtool.exe</SignToolPath>
      <SignToolPath Condition="!Exists($(SignToolPath))">$(ProgramFiles)\Windows Kits\10\bin\10.0.18362.0\x64\signtool.exe</SignToolPath>    
      <SignToolPath Condition="!Exists($(SignToolPath))">$(WindowsSDK80Path)bin\x64\signtool.exe</SignToolPath>
      <SignToolPath Condition="!Exists($(SignToolPath))">signtool.exe</SignToolPath> <!-- fallback to use PATH environment -->  
    </PropertyGroup>
    <ItemGroup>
      <FilesToSign Include="@(IntermediateAssembly)" />
      <FilesToSign Include="@(IntermediateRefAssembly)" />
      <FilesToSign Include="@(IntermediateSatelliteAssembliesWithTargetPath)" />
      <FilesToSignFiltered Include="@(FilesToSign)" Condition="Exists(%(FilesToSign.Identity))" />
    </ItemGroup>
    <Exec Condition="'@(FilesToSignFiltered->Count())' > 0" Command="&quot;$(SignToolPath)&quot; sign /v /fd SHA1 /f &quot;$(CertificatePath)&quot; /p &quot;$(CertificatePassword)&quot; /tr http://timestamp.digicert.com /td SHA1 &quot;%(FilesToSignFiltered.Identity)&quot;"
          WorkingDirectory="$(ProjectDir)" EchoOff="true" />
    <Exec Condition="'@(FilesToSignFiltered->Count())' > 0" Command="&quot;$(SignToolPath)&quot; sign /v /as /d &quot;Authorization Summary&quot; /fd SHA256 /f &quot;$(CertificatePath)&quot; /p &quot;$(CertificatePassword)&quot; /tr http://timestamp.digicert.com /td SHA256 &quot;%(FilesToSignFiltered.Identity)&quot;"
          WorkingDirectory="$(ProjectDir)" EchoOff="true" />
  </Target>
</Project>
